{"version":3,"sources":["Loan.js","App.js","reportWebVitals.js","index.js"],"names":["Loan","useState","year","setYear","months","setMonths","amount","setAmount","rate","setrate","result","setresult","flag","setflag","err","seterr","id","className","map","row","index","payment","pp","int","loanBalance","onClick","type","placeholder","onChange","e","target","value","required","position","preventDefault","i","month","console","log","parseInt","toString","payment1","Math","pow","pp1","int1","round","calculate","class","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f491b73.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport './Loan.css'\r\nconst Loan = () => {\r\n    const [year, setYear] = useState(0);\r\n    const [months, setMonths] = useState(0);\r\n    const [amount, setAmount] = useState(0);\r\n    const [rate, setrate] = useState(0);\r\n    const [result, setresult] = useState([]);\r\n    const [flag, setflag] = useState(false);\r\n    const [err, seterr] = useState('');\r\n    const calculate = (e) => {\r\n        e.preventDefault();\r\n        if (amount === 0) {\r\n            seterr('please enter amount');\r\n        } else if (rate === 0) {\r\n            seterr('please enter rate of interest');\r\n        } else if (year === 0 && months === 0) {\r\n            seterr('please enter Loan Period');\r\n        }\r\n        else {\r\n            var month = 0;\r\n            console.log(typeof (year), year, typeof (months), months);\r\n            if (year !== 0 && months !== 0) {\r\n                month = parseInt((year * 12).toString()) + parseInt(months.toString());\r\n            } else if (year !== 0) {\r\n                month = year * 12;\r\n            } else {\r\n                month = months;\r\n            }\r\n            console.log(typeof (month), month, typeof (year), year, typeof (months), months);\r\n            var i;\r\n            month = parseInt(month.toString());\r\n            console.log(typeof (month));\r\n            for (i = 1; i <= month; i++) {\r\n                let payment1 = ((amount * rate / 1200) * Math.pow((1 + rate / 1200), month)) / (Math.pow((1 + rate / 1200), month) - 1)\r\n                let pp1 = payment1 * Math.pow(1 + rate / 1200, (i - 1 - (month)));\r\n                let int1 = payment1 - pp1;\r\n                let loanBalance = (int1 / (rate / 1200)) - pp1;\r\n\r\n                console.log(payment1);\r\n                let row = {\r\n                    payment: Math.round(payment1 * 100) / 100,\r\n                    pp: Math.round(pp1 * 100) / 100,\r\n                    int: Math.round(int1 * 100) / 100,\r\n                    loanBalance: Math.round(loanBalance * 100) / 100\r\n                }\r\n                console.log(row);\r\n                setresult(result => [...result, row]);\r\n            }\r\n            setflag(true);\r\n        }\r\n\r\n    };\r\n    const clear = () => {\r\n        setflag(false);\r\n        setresult([]);\r\n        setAmount(0);\r\n        seterr('');\r\n        setrate(0);\r\n        setMonths(0);\r\n        setYear(0);\r\n    }\r\n\r\n    return (\r\n        <div id=\"home-page\">\r\n\r\n            <div>\r\n\r\n                {!flag ?\r\n                    <div className='container'>\r\n                        <form className='form'>\r\n                            <div className='row g-3'>\r\n                                <div className='col md-6'>\r\n                                    <label className='form-label'>Loan Amount </label>\r\n                                </div>\r\n                                <div className='col'>\r\n                                    <input className='form-control' type=\"number\" placeholder=\"\" onChange={(e) => setAmount(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row g-3'>\r\n                                <div className='col md-6'>\r\n                                    <label className='form-label' position=\"floating\">Rate of Interest</label>\r\n                                </div>\r\n                                <div className='col md-6'>\r\n                                    <input className='form-control' type='number' onChange={(e) => setrate(e.target.value)} required />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='row g-3'>\r\n                                <div className='col md-6'>\r\n                                    <label className='form-label' position='floating'>Loan Period(years)</label>\r\n                                </div>\r\n                                <div className='col md-6'>\r\n                                    <input className='form-control' type=\"number\" placeholder=\"Enter Loan period in years\" onChange={(e) => setYear(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n          <div>\r\n              <h5>or</h5>\r\n        </div>\r\n          <div className='row g-3'>\r\n                                <div className='col md-6'>\r\n                                    <label className='form-label' position='floating'>Loan Period(months)</label>\r\n                                </div>\r\n                                <div className='col md-6'>\r\n                                    <input className='form-control' type=\"number\" placeholder=\"Enter Loan period in Months\" onChange={(e) => setMonths(e.target.value)} required></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <button className='calculate' onClick={e => calculate(e)} type='submit'>Calculate</button>\r\n                            </div>\r\n                        </form>\r\n                        {err &&\r\n                            <div class=\"card\">\r\n                                <div class=\"card-body\">\r\n                                    {err}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <table className=\"table table-success table-striped table-hover\">\r\n                            <thead>\r\n                                <tr >\r\n                                    <th>Payment No.</th>\r\n                                    <th>Payment Amount</th>\r\n                                    <th>Principal Amount Paid</th>\r\n                                    <th>Interest Amount Paid</th>\r\n                                    <th>Loan Outstanding balance</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {result.map((row, index) => (\r\n                                \r\n                                    <tr key={index}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{row.payment}</td>\r\n                                        <td>{row.pp}</td>\r\n                                        <td>{row.int}</td>\r\n                                        <td>{row.loanBalance}</td>\r\n                                    </tr>\r\n                                \r\n                            ))}\r\n                            </tbody>\r\n\r\n                        </table>\r\n                        <button className='calculate' onClick={clear}>Back</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loan;\r\n","import './App.css';\nimport Loan from './Loan';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n            <h2>Loan Repayment Calculator</h2>\n      </header>\n      <Loan/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}